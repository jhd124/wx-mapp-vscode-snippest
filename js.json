{
	"set data": {
		"scope": "javascript,typescript",
		"prefix": [
			"setData",
			"sd"
		],
		"body": "this.setData({${1}})"
	},
	"groot": {
		"scope": "javascript,typescript",
		"prefix": "groot",
		"body": [
			"groot(pageOption)",
			"\t.create()"
		]
	},
	"withQuery": {
		"scope": "javascript,typescript",
		"prefix": "withQuery",
		"body": [
			".withQuery({",
			"\tquery: ${1},",
			"\tcomputeQlData(data){",
			"\t\t${2}",
			"\t}",
			"})"
		]
	},
	"connect": {
		"scope": "javascript,typescript",
		"prefix": "connect",
		"body": [
			".connect(${1})"
		]
	},
	"variables": {
		"scope": "javascript,typescript",
		"prefix": [
			"this.variables",
			"variables"
		],
		"body": [
			"this.variables = getVariables({${1}}, ${2})"
		]
	},
	"pageOption": {
		"scope": "javascript,typescript",
		"prefix": "pageOption",
		"body": [
			"const pageOption = {",
			"\ttype: groot.appType.${1|page,component|}",
			"\t${2}",
			"}"
		]
	},
	"const =": {
		"scope": "javascript,typescript",
		"prefix": [
			"c=",
			"const {"
		],
		"body": [
			"const { ${1} } = $2"
		]
	},
	"onShareAppMessage": {
		"scope": "javascript,typescript",
		"prefix": [
			"onShareAppMessage",
			"share"
		],
		"body": [
			"onShareAppMessage () {",
			"\t${1}",
			"}"
		]
	},
	"function": {
		"scope": "javascript,typescript",
		"prefix": "function",
		"body": [
			"function ${1:foo}(${2}) {",
			"\t${3}",
			"}"
		]
	},
	"promise": {
		"scope": "javascript,typescript",
		"prefix": [
			"new Promise",
			"promise"
		],
		"body": [
			"new Promise((resolve, reject) => {${1}})"
		]
	},
	"export function": {
		"scope": "javascript,typescript",
		"prefix": [
			"export function",
			"ef"
		],
		"body": [
			"export function(${1}){${2}};"
		]
	},
	"Component-miniprogram--Com": {
		"scope": "javascript, typescript",
		"prefix": "Com",
		"body": [
			"Component({",
			"    options: {",
			"        addGlobalClass: true,",
			"    },",
			"    properties: {},",
			"    data: {",
			"    },",
			"    methods: {",
			"    },",
			"    created: function () {},",
			"});"
		],
		"description": "Component for miniprogram template"
	},
	"Component-miniprogram--Component": {
		"scope": "javascript, typescript",
		"prefix": "Component",
		"body": [
			"Component({",
			"    options: {",
			"        addGlobalClass: true,",
			"    },",
			"    properties: {},",
			"    data: {",
			"    },",
			"    methods: {",
			"    },",
			"    created: function () {},",
			"});"
		],
		"description": "Component for miniprogram template"
	},
	"ViewModel-for-miniprogram--Vi": {
		"scope": "javascript, typescript",
		"prefix": "Vi",
		"body": [
			"ViewModel({",
			"    options: {",
			"        addGlobalClass: true,",
			"    },",
			"    useQuery: {},",
			"    useStore: {},",
			"    properties: {},",
			"    data: {",
			"    },",
			"    methods: {",
			"    },",
			"    created: function () {},",
			"});"
		],
		"description": "ViewModel for miniprogram template"
	},
	"ViewModel-for-miniprogram--View": {
		"scope": "javascript, typescript",
		"prefix": "View",
		"body": [
			"ViewModel({",
			"    options: {",
			"        addGlobalClass: true,",
			"    },",
			"    useQuery: {},",
			"    useStore: {},",
			"    properties: {},",
			"    data: {",
			"    },",
			"    methods: {",
			"    },",
			"    created: function () {},",
			"});"
		],
		"description": "ViewModel for miniprogram template"
	}
}